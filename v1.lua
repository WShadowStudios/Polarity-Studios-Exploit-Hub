local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Polarity Studios Exploit UI",
   LoadingTitle = "Polarity Studios Exploit Menu",
   LoadingSubtitle = "by FarukLo",
   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = "Exploit menu"
   },
   Discord = {
      Enabled = false,
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },
   KeySystem = true, -- Set this to true to use our key system
   KeySettings = {
      Title = "Polarity Studios Exploit Menu Security",
      Subtitle = "Password System",
      Note = "",
      FileName = "Password", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"FarukLoSigmaBabaPro31"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})

local Game = Window:CreateTab("Game", 4483362458) -- Title, Image
local OtherUI = Window:CreateTab("Other", 4483362458) -- Title, Image

local GameSection = Game:CreateSection("Game")
local PlayerSection = Game:CreateSection("Player")
local DoorsSection = OtherUI:CreateSection("Doors Hacks")

local VynixiusHub = OtherUI:CreateButton({
   Name = "Vynixius Hub",
   Callback = function()
   loadstring(game:HttpGet("https://raw.githubusercontent.com/RegularVynixu/Vynixius/main/Doors/Script.lua"))()
   end,
})

local Slider = Game:CreateSlider({
   Name = "WalkSpeed",
   Range = {16, 600},
   Increment = 3,
   Suffix = "Speed",
   CurrentValue = 16,
   Flag = "WalkSpeed Slider", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(Value)
   game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = Value
   end,
})

local Noclip = nil
local Clip = nil

function noclip()
        Clip = false
        local function Nocl()
                if Clip == false and game.Players.LocalPlayer.Character ~= nil then
                        for _,v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
                                if v:IsA('BasePart') and v.CanCollide and v.Name ~= floatName then
                                        v.CanCollide = false
                                end
                        end
                end
                wait(0.21) -- basic optimization
        end
        Noclip = game:GetService('RunService').Stepped:Connect(Nocl)
end

function clip()
        if Noclip then Noclip:Disconnect() end
        Clip = true
end


local Toggle = Game:CreateToggle({
   Name = "NoClip",
   CurrentValue = false,
   Flag = "NoClip", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
   Callback = function(NoClipValue)
     if NoClipValue == true then
       noclip()
     else
          clip()       
     end
   end,
})

local CloseInterface = Game:CreateButton({
   Name = "Close Interface",
   Callback = function()
   Rayfield:Destroy()
   end,
})
